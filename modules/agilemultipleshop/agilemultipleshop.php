<?php///-build_id: 2015042222.1245/// This source file is subject to the Software License Agreement that is bundled with this /// package in the file license.txt, or you can get it here/// http://addons-modules.com/en/content/3-terms-and-conditions-of-use////// @copyright  2009-2012 Addons-Modules.com///  If you need open code to customize or merge code with othe modules, please contact us.if (!defined('_PS_VERSION_'))	exit;if(!class_exists('AgileInstaller')){	include_once(_PS_ROOT_DIR_ . '/modules/agilemultipleshop/install/' . (_PS_VERSION_ > '1.6'?'1.6x':'1.5x') . '/classes/AgileInstaller.php');	eval("class AgileInstaller extends AgileInstallerCore {}");	}if(!class_exists('AgileModule')){	include_once(_PS_ROOT_DIR_ . '/modules/agilemultipleshop/install/' . (version_compare(_PS_VERSION_ , '1.6', '>') ? '1.6x' : '1.5x') . '/classes/module/AgileModule.php');	eval("class AgileModule extends AgileModuleCore {}");}class AgileMultipleShop extends AgileModule{	const INSTALL_SQL_FILE = 'install.sql';	const SHOP_BY_CUSTOM_FIELD = 'postcode';	const SHOP_BY_CUSTOM_NAME = 'Postcode';	const SHOP_BY_CUSTOM_LANG = false;	const SHOP_BY_CUSTOM_ISINT = false;	const SHOP_URL_MODE_VIRTUAL = 0;	const SHOP_URL_MODE_DOMAIN = 1;	const SHOP_LOGIN_MODE_SINGLE = 1;	const SHOP_LOGIN_MODE_MULTIPLE = 0;	const SELLERS_SHOP_MODE_VIRTUAL = 0;  	const SELLERS_SHOP_MODE_PHYSICAL = 1; 		private	$_html = '';	public function __construct()	{				$this->configs = Configuration::getMultiple(array('ASP_SHOP_URL_MODE','ASP_SHOP_LOGIN_MODE','ASP_SELLER_NBR','ASP_SELLERS_BLOCK_POSITION','ASP_SELLERS_BLOCK_STYLE', 'ASP_HEADER_LOGO_MODE', 'ASP_LOCATION_BLOCK_POSITION','ASP_LOCATION_BLOCK_STYLE', 'ASP_LOCATION_BLOCK_LEVEL','ASP_LOCATION_BLOCK_VIRTUALSHOP','ASP_SELLERS_BLOCK_VIRTUALSHOP','ASP_HOME_COLUMN_LEFT','ASP_HOME_COLUMN_RIGHT','ASP_URL_CHOICE_CAT','ASP_URL_CHOICE_CMS'));				$this->newfiles = array( 			'classes/AgileInstaller.php' => array('1.6x'=>'classes/AgileInstaller.php', '1.5x' => 'classes/AgileInstaller.php')			,'classes/AgileHelper.php' => array('1.6x'=>'classes/AgileHelper.php', '1.5x' => 'classes/AgileHelper.php')			,'classes/AgileSellerManager.php' => array('1.6x' =>'classes/AgileSellerManager.php', '1.5x'=>'classes/AgileSellerManager.php')			,'classes/AgileSessionData.php' => array('1.6x' =>'classes/AgileSessionData.php', '1.5x'=>'classes/AgileSessionData.php')			,'classes/AgileSessionHandler.php' => array('1.6x' =>'classes/AgileSessionHandler.php', '1.5x'=>'classes/AgileSessionHandler.php')			,'classes/module/AgileModule.php' => array('1.6x' =>'classes/module/AgileModule.php', '1.5x'=>'classes/module/AgileModule.php')			,'controllers/front/AgileSellersController.php' => array('1.6x' => 'controllers/front/AgileSellersController.php', '1.5x' => 'controllers/front/AgileSellersController.php')			,'controllers/front/SellerLocationController.php' => array('1.6x' => 'controllers/front/SellerLocationController.php', '1.5x' => 'controllers/front/SellerLocationController.php')        );		$this->shared_override = array(		);		$this->version_dependencies = array('agilemultipleseller' => '3.0.2.1'); 						$this->name = 'agilemultipleshop';        		$this->tab = 'front_office_features';		$this->version = '2.0.2.1';		$this->author = 'addons-modules.com';		$this->dependencies = array('agilemultipleseller');		$this->ps_versions_compliancy = array('min' => '1.6', 'max' => _PS_VERSION_);		$this->bootstrap = true;		parent::__construct();		$this->displayName = $this->l('Agile Multiple Shop');		$this->description = $this->l('Provides multiple shop functionality for multiple sellers - one seller, one shop.');	}	public function install()	{		if(!$this->preinstall())return false;		        if(!AgileInstaller::sql_install(dirname(__FILE__).'/'.self::INSTALL_SQL_FILE))            return false;			if (parent::install() == false 			OR !$this->setDefaultConfig('ASP_SELLER_NBR', 15)			OR !$this->setDefaultConfig('ASP_HOME_COLUMN_LEFT', 1)			OR !$this->setDefaultConfig('ASP_HOME_COLUMN_RIGHT', 0)			OR !$this->setDefaultConfig('ASP_SELLERS_BLOCK_POSITION', 1)			OR !$this->setDefaultConfig('ASP_SELLERS_BLOCK_STYLE', 0)			OR !$this->setDefaultConfig('ASP_SELLERS_BLOCK_VIRTUALSHOP', 0)			OR !$this->setDefaultConfig('ASP_HEADER_LOGO_MODE', 0)			OR !$this->setDefaultConfig('ASP_LOCATION_BLOCK_POSITION', 1)			OR !$this->setDefaultConfig('ASP_LOCATION_BLOCK_STYLE', 0)			OR !$this->setDefaultConfig('ASP_LOCATION_BLOCK_LEVEL', 'country')			OR !$this->setDefaultConfig('ASP_SHOP_URL_MODE', AgileMultipleShop::SHOP_URL_MODE_VIRTUAL)			OR !$this->setDefaultConfig('ASP_SHOP_LOGIN_MODE', AgileMultipleShop::SHOP_LOGIN_MODE_SINGLE)				OR !$this->setDefaultConfig('ASP_LOCATION_BLOCK_LEVEL', 'country')			OR !$this->setDefaultConfig('ASP_LOCATION_BLOCK_VIRTUALSHOP', 0)			OR !$this->setDefaultConfig('ASP_URL_CHOICE_CMS', 0)			OR !$this->setDefaultConfig('ASP_URL_CHOICE_CAT', 0)			OR $this->registerHook('displayHeader') == false 			OR $this->registerHook('displayLeftColumn') == false 			OR $this->registerHook('displayRightColumn') == false 			OR $this->registerHook('displayHomeTab') == false 			OR $this->registerHook('displayHomeTabContent') == false 				)return false;		if(!AgileInstaller::create_tab('Seller Types', 'AgileSellerTypes', 'AdminAdmin', $this->name))return false;		AgileInstaller::init_tab_prmission_for_existing_profiles('AgileSellerTypes',1,1,1,1);		    		    		$this->create_shops_for_existing_sellers();				if(version_compare(_PS_VERSION_, '1.5', '>='))Autoload::getInstance()->generateIndex();		return true;	}	public function uninstall()    {           if(!parent::uninstall())return false;		AgileInstaller::delete_tab('AgileSellerTypes');		        return true;    }		public function getContent()	{		$this->_html = '';		$adminfolder = AgileInstaller::detect_admin_folder($_SERVER['SCRIPT_FILENAME']);		$health_check = AgileInstaller::install_health_check($this->newfiles, $this->name, $adminfolder);		if(!empty($health_check))	$this->_html .= $health_check;				$this->_html .= AgileInstaller::show_agile_links();		if (Tools::isSubmit('submitSettings'))		{			$header_logo_mode  = Tools::getValue('header_logo_mode');			$home_column_left  = Tools::getValue('home_column_left');			$home_column_right  = Tools::getValue('home_column_right');			$sellers_shop_mode  = Tools::getValue('sellers_shop_mode');			$location_block_level = Tools::getValue('location_block_level');			$shop_url_mode = (int)Tools::getValue('shop_url_mode');			$shop_login_mode = (int)Tools::getValue('shop_login_mode');			if (!$sellerNbr = Tools::getValue('sellerNbr') OR empty($sellerNbr))			{				$this->_html .= $this->displayError($this->l('Please fill in the "sellers to be displayed" field.'));			}			elseif ((int)($sellerNbr) == 0)			{				$this->_html .= $this->displayError($this->l('Invalid number.'));			}			else			{				Configuration::updateValue('ASP_SELLER_NBR', intval(($sellerNbr)));				Configuration::updateValue('ASP_SELLERS_BLOCK_POSITION', intval(Tools::getValue('sellers_block_pos')));				Configuration::updateValue('ASP_HOME_COLUMN_LEFT', $home_column_left);				Configuration::updateValue('ASP_HOME_COLUMN_RIGHT', $home_column_right);				Configuration::updateValue('ASP_HEADER_LOGO_MODE', $header_logo_mode);				Configuration::updateValue('ASP_SELLERS_BLOCK_STYLE', intval(Tools::getValue('sellers_block_style')));				Configuration::updateValue('ASP_SELLERS_BLOCK_VIRTUALSHOP', intval(Tools::getValue('sellers_block_virtualshop')));				Configuration::updateValue('ASP_LOCATION_BLOCK_POSITION', intval(Tools::getValue('location_block_pos')));				Configuration::updateValue('ASP_LOCATION_BLOCK_STYLE', intval(Tools::getValue('location_block_style')));				Configuration::updateValue('ASP_LOCATION_BLOCK_VIRTUALSHOP', intval(Tools::getValue('location_block_virtualshop')));				Configuration::updateValue('ASP_LOCATION_BLOCK_LEVEL', Tools::getValue('location_block_level'));				Configuration::updateValue('ASP_SHOP_URL_MODE', $shop_url_mode);				Configuration::updateValue('ASP_SHOP_LOGIN_MODE', $shop_login_mode);				Configuration::updateValue('ASP_URL_CHOICE_CAT', Tools::getValue('url_choice_cat'));				Configuration::updateValue('ASP_URL_CHOICE_CMS', Tools::getValue('url_choice_cms'));				$this->_html .= $this->displayConfirmation($this->l('Settings updated'));			}		}				$this->_html .= $this->renderForm();		$this->_html .= '<div class="alert alert-info"> <span style="color:red">' . $this->l('Notes:') . '</span> - 			<a target="_new" style="color:blue;" href="' . Tools::getShopDomainSsl(true,true) . __PS_BASE_URI__ . "modules/agilemultipleshop/Install_en.txt"  . '">' . $this->l('Please see here for detailed  instructions.') . '</a><br>			' .  $this->l('1. Seller Logo at Header - You may change seller logo position by modifying header.tpl and also need adjust your CSS file to adopt seller logo at header ') . '<br>		' .  $this->l('2. Breadcrumb - You need make some changes at breadcrumb.tpl file to include seller shop in Breadcrumb (store navigation bar)') . '<br></div>';		return $this->_html;	}	public function renderForm()	{		$locationLevelList = array(			array(				'id' => 'country',				'name' => $this->l('country')			),			array(				'id' => 'state',				'name' => $this->l('state')			),			array(				'id' => 'city',				'name' => $this->l('city')			),			array(				'id' => 'sellertype',				'name' => $this->l('sellertype')			)		);		$fields_form = array(			'form' => array(				'legend' => array(					'title' => $this->l('Settings'),					'image' => $this->_path.'logo.gif',				),				'input' => array(					array(						'type' => 'radio',						'label' => $this->l('Shop URL Mode'),						'name' => 'shop_url_mode',						'form_group_class' => "hidden",						'values' => array(							array(								'id' => 'Share',								'value' => 0,								'label' => $this->l('Virtual URL - All shop share the same domain with primary store.')							),							array(								'id' => 'Domain',								'value' => 1,								'label' => $this->l('Domain or Subdomain - Each shop will have diffeerent domain or subdomain.')							),						),						'desc' => $this->l('This can only be selected at beginning, once it is selected, please do not change it, otherwise, you will have  to manually change all shop URL setting.')					),					array(						'type' => 'radio',						'label' => $this->l('Shop Login Mode'),						'name' => 'shop_login_mode',						'form_group_class' => "hidden",						'values' => array(							array(								'id' => 'Multiple',								'value' => 0,								'label' => $this->l('Multiple Login - Customer has to login to each shop(domain) separately.')							),							array(								'id' => 'Single',								'value' => 1,								'label' => $this->l('Single Login - Customer authenticted one time will log in to shops(domains).')							),						),					),					array(						'type' => 'radio',						'label' => $this->l('Seller Shop Header Logo'),						'name' => 'header_logo_mode',						'values' => array(							array(								'id' => 'MainLogo',								'value' => 0,								'label' => $this->l('Show main store logo only')							),							array(								'id' => 'SellerLogo',								'value' => 1,								'label' => $this->l('Show seller logo only')							),							array(								'id' => 'Both',								'value' => 2,								'label' => $this->l('Show both the main store logo and the seller logo')							),						),						'desc' => $this->l('If you choose both, your theme must be adjusted to fit two logos by your theme designer - otherwise please choose one of other 2 options.')					),					array(						'type' => 'radio',							'label' => $this->l('Home Page Has Left Column?'),						'name' => 'home_column_left',						'values' => array(							array(								'id' => 'MainLogol_L',								'value' => 0,								'label' => $this->l('No')							),							array(								'id' => 'SellerLogo_L',								'value' => 1,								'label' => $this->l('Yes')							),						),					),					array(						'type' => 'radio',							'label' => $this->l('Home Page Has Right Column?'),						'name' => 'home_column_right',						'values' => array(							array(								'id' => 'MainLogo',								'value' => 0,								'label' => $this->l('No')							),							array(								'id' => 'SellerLogo',								'value' => 1,								'label' => $this->l('Yes')							),						),					),					array(						'type' => 'radio',						'label' => $this->l('Shop by Seller Block'),						'name' => 'sellers_block_pos',						'values' => array(							array(								'id' => 'onLeft',								'value' => 1,								'label' => $this->l('On Left Column')							),							array(								'id' => 'onRight',								'value' => 2,								'label' => $this->l('On Right Column')							),							array(								'id' => 'disabled',								'value' => 0,								'label' => $this->l('Do Not Display')							),						),						'desc' => $this->l('You can adjust the position from the "Modules"->"Positions" tab.')					),					array(						'type' => 'text',						'label' => $this->l('Number of Sellers Displayed'),						'name' => 'sellerNbr',						'desc' => $this->l('Set the number of sellers (shops) to be displayed on the sellers block that is displayed in the left or right column.')					),					array(						'type' => 'radio',						'label' => $this->l('Shop By Seller block style'),						'name' => 'sellers_block_style',						'values' => array(							array(								'id' => 'flat',								'value' => 0,								'label' => $this->l('Flat name list')							),							array(								'id' => 'dropdownlist',								'value' => 1,								'label' => $this->l('Drop down list')							),						),						'desc' => $this->l('You can adjust the position at [Modules] - [Positions] tab.')					),					array(						'type' => 'radio',						'label' => $this->l('Show on seller shop?'),						'name' => 'sellers_block_virtualshop',						'values' => array(							array(								'id' => 'active_off',								'value' => 0,								'label' => $this->l('No')							),							array(								'id' => 'active_on',								'value' => 1,								'label' => $this->l('Yes')							),						),						'desc' => $this->l('Do you want to show [Shop By Seller] block at seller virtual shop?')					),					array(						'type' => 'radio',						'label' => $this->l('Shop by Location Block'),						'name' => 'location_block_pos',						'values' => array(							array(								'id' => 'OnLeft',								'value' => 1,								'label' => $this->l('On Left Column')							),							array(								'id' => 'OnRight',								'value' => 2,								'label' => $this->l('On Right Column')							),							array(								'id' => 'Disabled',								'value' => 0,								'label' => $this->l('Don Not Display')							),						),						'desc' => $this->l('You can adjust the position at [Modules] - [Positions] tab.')					),					array(						'type' => 'radio',						'label' => $this->l('Shop By Location style'),						'name' => 'location_block_style',						'values' => array(							array(								'id' => 'flat',								'value' => 0,								'label' => $this->l('Flat name list')							),							array(								'id' => 'dropdownlist',								'value' => 1,								'label' => $this->l('Drop down list')							),						),						'desc' => $this->l('You can adjust the position at [Modules] - [Positions] tab.')					),					array(						'type' => 'select',						'label' => $this->l('Shop By Location Level'),						'name' => 'location_block_level',						'options' => array(							'query' => $locationLevelList,							'id' => 'id',							'name' => 'name'						),					),					array(						'type' => 'radio',						'label' => $this->l('Show on seller shop?'),						'name' => 'location_block_virtualshop',						'values' => array(							array(								'id' => 'active_off',								'value' => 0,								'label' => $this->l('No')							),							array(								'id' => 'active_on',								'value' => 1,								'label' => $this->l('Yes')							),						),						'desc' => $this->l('Do you want to show [Shop By Location] block at seller virtual shop?')					),					array(						'type' => 'select',						'label' => $this->l('Category URL:'),						'name' => 'url_choice_cat',						'options' => array(							'query' => array (								array(									'id' => '0',									'name' => $this->l('Always use virtual shop')								),								array(									'id' => '1',									'name' => $this->l('Always use main store')								),								array(									'id' => '2',									'name' => $this->l('Private categories use virtual shop')								),							),							'id' => 'id',							'name' => 'name'						),						'desc' => $this->l('when user at seller virtual shop, how does the category URL show?')					),					array(						'type' => 'select',						'label' => $this->l('CMS Categories/Pages URL:'),						'name' => 'url_choice_cms',						'options' => array(							'query' => array (								array(									'id' => '0',									'name' => $this->l('Always use virtual shop')								),								array(									'id' => '1',									'name' => $this->l('Always use main store')								),								array(									'id' => '2',										'name' => $this->l('Private cms category/page use virtual shop')								),							),							'id' => 'id',							'name' => 'name'						),							'desc' => $this->l('when user at seller virtual shop, how does the CMS category/page URL show?')					),				),				'submit' => array(					'title' => $this->l('Save'),				)			)		);		$helper = new HelperForm();		$helper->show_toolbar = false;		$helper->table = $this->table;		$lang = new Language((int)Configuration::get('PS_LANG_DEFAULT'));		$helper->default_form_language = $lang->id;		$helper->allow_employee_form_lang = Configuration::get('PS_BO_ALLOW_EMPLOYEE_FORM_LANG') ? Configuration::get('PS_BO_ALLOW_EMPLOYEE_FORM_LANG') : 0;		$helper->identifier = $this->identifier;		$helper->submit_action = 'submitSettings';		$helper->currentIndex = $this->context->link->getAdminLink('AdminModules', false).'&configure='.$this->name.'&tab_module='.$this->tab.'&module_name='.$this->name;		$helper->token = Tools::getAdminTokenLite('AdminModules');		$helper->tpl_vars = array(			'fields_value' => $this->getConfigFieldsValues(),			'languages' => $this->context->controller->getLanguages(),			'id_language' => $this->context->language->id		);		return $helper->generateForm(array($fields_form));	}   	public function getConfigFieldsValues()	{		$conf_keys = array('ASP_SHOP_URL_MODE','ASP_SHOP_LOGIN_MODE','ASP_HEADER_LOGO_MODE','ASP_HOME_COLUMN_LEFT','ASP_HOME_COLUMN_RIGHT','ASP_SELLERS_BLOCK_POSITION','ASP_SELLER_NBR','ASP_SELLERS_BLOCK_STYLE','ASP_SELLERS_BLOCK_VIRTUALSHOP','ASP_LOCATION_BLOCK_POSITION','ASP_LOCATION_BLOCK_STYLE','ASP_LOCATION_BLOCK_LEVEL','ASP_LOCATION_BLOCK_VIRTUALSHOP','ASP_URL_CHOICE_CAT','ASP_URL_CHOICE_CMS');		$conf = Configuration::getMultiple($conf_keys);		return array(			'shop_url_mode' => Tools::getValue('shop_url_mode', array_key_exists('ASP_SHOP_URL_MODE', $conf) ? $conf['ASP_SHOP_URL_MODE'] : ''),			'shop_login_mode' => Tools::getValue('shop_login_mode', array_key_exists('ASP_SHOP_LOGIN_MODE', $conf) ? $conf['ASP_SHOP_LOGIN_MODE'] : ''),			'header_logo_mode' => Tools::getValue('header_logo_mode', array_key_exists('ASP_HEADER_LOGO_MODE', $conf) ? $conf['ASP_HEADER_LOGO_MODE'] : ''),			'home_column_left' => Tools::getValue('home_column_left', array_key_exists('ASP_HOME_COLUMN_LEFT', $conf) ? $conf['ASP_HOME_COLUMN_LEFT'] : ''),			'home_column_right' => Tools::getValue('home_column_right', array_key_exists('ASP_HOME_COLUMN_RIGHT', $conf) ? $conf['ASP_HOME_COLUMN_RIGHT'] : ''),			'sellers_block_pos' => Tools::getValue('sellers_block_pos', array_key_exists('ASP_SELLERS_BLOCK_POSITION', $conf) ? $conf['ASP_SELLERS_BLOCK_POSITION'] : ''),			'sellerNbr' => Tools::getValue('sellerNbr', array_key_exists('ASP_SELLER_NBR', $conf) ? $conf['ASP_SELLER_NBR'] : ''),			'sellers_block_style' => Tools::getValue('sellers_block_style',array_key_exists('ASP_SELLERS_BLOCK_STYLE', $conf) ? $conf['ASP_SELLERS_BLOCK_STYLE'] : ''),			'sellers_block_virtualshop' => Tools::getValue('sellers_block_virtualshop', array_key_exists('ASP_SELLERS_BLOCK_VIRTUALSHOP', $conf) ? $conf['ASP_SELLERS_BLOCK_VIRTUALSHOP'] : ''),			'location_block_pos' => Tools::getValue('location_block_pos', array_key_exists('ASP_LOCATION_BLOCK_POSITION', $conf) ? $conf['ASP_LOCATION_BLOCK_POSITION'] : ''),			'location_block_style' => Tools::getValue('location_block_style', array_key_exists('ASP_LOCATION_BLOCK_STYLE', $conf) ? $conf['ASP_LOCATION_BLOCK_STYLE'] : ''),			'location_block_level' => Tools::getValue('location_block_level', array_key_exists('ASP_LOCATION_BLOCK_LEVEL', $conf) ? $conf['ASP_LOCATION_BLOCK_LEVEL'] : ''),			'location_block_virtualshop' => Tools::getValue('location_block_virtualshop', array_key_exists('ASP_LOCATION_BLOCK_VIRTUALSHOP', $conf) ? $conf['ASP_LOCATION_BLOCK_VIRTUALSHOP'] : ''),			'url_choice_cat' => Tools::getValue('url_choice_cat', array_key_exists('ASP_URL_CHOICE_CAT', $conf) ? $conf['ASP_URL_CHOICE_CAT'] : ''),			'url_choice_cms' => Tools::getValue('url_choice_cms', array_key_exists('ASP_URL_CHOICE_CMS', $conf) ? $conf['ASP_URL_CHOICE_CMS'] : ''),		);	}								public function hookBreadcrumbShops()	{		include_once(_PS_ROOT_DIR_ . "/modules/agilemultipleseller/SellerInfo.php");		$sellerinfo = new SellerInfo(SellerInfo::getIdBSellerId(Shop::$id_shop_owner), $this->context->cookie->id_lang);		$main_shop = new Shop(Configuration::get('PS_SHOP_DEFAULT'));		$this->context->smarty->assign(array(			'seller_shop' => (Shop::$id_shop_owner > 0 ? Context::getContext()->shop : false)			,'isat_seller_home' => ((AgileHelper::getPageName() == 'agileseller.php') ? 1 : 0)			,'seller_name' => $sellerinfo->company			,'base_dir_default' => $main_shop->getBaseURL()			));		return $this->display(__FILE__, 'views/templates/hook/hookbreadcrumb-shops.tpl');			}		public function hookDisplayHomeTab($params)	{		if(!Module::isInstalled('agilemultipleseller'))return;		return $this->display(__FILE__, 'views/templates/hook/hometab.tpl');			}		public function hookDisplayHomeTabContent($params)	{		if(!$this->active)return;		if(!Module::isInstalled('agilemultipleseller'))return;		$this->assignLocationBlockData();				$this->assignSellerBlockData();				return $this->display(__FILE__, 'views/templates/hook/hometabcontent.tpl');			}	public function hookDisplayHeader($params)	{		if(!$this->active)return;		if(!Module::isInstalled('agilemultipleseller'))return;		include_once(_PS_ROOT_DIR_ . "/modules/agilemultipleseller/SellerInfo.php");		$seller_logo_url =   (isset(Shop::$sellerinfo)? SellerInfo::get_seller_logo_url_static(Shop::$sellerinfo->id):'');		$header_logo_mode =  intval(Configuration::get('ASP_HEADER_LOGO_MODE'));		$main_shop = new Shop(Configuration::get('PS_SHOP_DEFAULT'));		$seller_shop_url = Context::getContext()->shop->getBaseURL();		$HOOK_SELLER_HEADER_LOGO = '<a id="seller_header_logo" class="logo" href="' . $seller_shop_url . '"><img src="' . $seller_logo_url  . '" height="60"></a>';		if($header_logo_mode ==0 OR Shop::$id_shop_owner ==0 )$HOOK_SELLER_HEADER_LOGO =''; 				$this->context->smarty->assign(array(			'header_logo_mode' =>$header_logo_mode,			'base_dir_default' => $main_shop->getBaseURL(),			'id_shop_owner' => Shop::$id_shop_owner,			'shops_link' => $this->hookBreadcrumbShops(),			'seller_logo_url' => $seller_logo_url,			'HOOK_SELLER_HEADER_LOGO'=>$HOOK_SELLER_HEADER_LOGO,			'agile_single_login' => (int)Configuration::get('ASP_SHOP_LOGIN_MODE'),			'session_id' => session_id(),		));		return $this->display(__FILE__, 'views/templates/hook/hookheader.tpl');			}		public function hookDisplayRightColumn($params)	{		if(!$this->active)return;			    $res = '';	    if(intval(Configuration::get('ASP_SELLERS_BLOCK_POSITION')) == 2)	    {			if(Shop::$id_shop_owner == 0 || intval(Configuration::get('ASP_SELLERS_BLOCK_VIRTUALSHOP')) == 1 )	    		$res .=  $this->showSellerBlock($params);		}				if(intval(Configuration::get('ASP_LOCATION_BLOCK_POSITION')) == 2)		{			if(Shop::$id_shop_owner == 0 || intval(Configuration::get('ASP_LOCATION_BLOCK_VIRTUALSHOP')) == 1 )				$res .=  $this->showLocationBlock($params);		}    	return $res;	}		public function hookDisplayLeftColumn($params)	{		if(!$this->active)return;					    $res = '';	    if(intval(Configuration::get('ASP_SELLERS_BLOCK_POSITION')) == 1)		{			if(Shop::$id_shop_owner == 0 || intval(Configuration::get('ASP_SELLERS_BLOCK_VIRTUALSHOP')) == 1 )				$res .=  $this->showSellerBlock($params);		}		if(intval(Configuration::get('ASP_LOCATION_BLOCK_POSITION')) == 1)		{			if(Shop::$id_shop_owner == 0 || intval(Configuration::get('ASP_LOCATION_BLOCK_VIRTUALSHOP')) == 1 )				$res .=  $this->showLocationBlock($params);		}    	return $res;	}		private function showSellerBlock($params)	{        if(!$this->active)return;	    if(!Module::isInstalled('agilemultipleseller'))return;		$this->assignSellerBlockData();		return $this->display(__FILE__, 'views/templates/hook/hookblocksellers.tpl');			}		private function assignSellerBlockData()	{		include_once(_PS_ROOT_DIR_ . "/modules/agilemultipleseller/SellerInfo.php");				/*$sql = 'SELECT e.id_employee,e.firstname,e.lastname,sl.company,s.id_seller,s.id_sellerinfo	            FROM `'._DB_PREFIX_.'employee` e	                LEFT JOIN  `'._DB_PREFIX_.'sellerinfo` s ON e.id_employee = s.id_seller	                LEFT JOIN  `'._DB_PREFIX_.'sellerinfo_lang` sl ON (sl.id_sellerinfo = s.id_sellerinfo AND sl.id_lang=' . intval($this->context->cookie->id_lang). ')	            WHERE e.active=1 AND e.id_profile = ' . Configuration::get('AGILE_MS_PROFILE_ID') . '	            ORDER BY s.date_add DESC	            LIMIT 0,' . intval(Configuration::get('ASP_SELLER_NBR')) . '	            ';*/				$sql = '		SELECT DISTINCT e.id_employee,e.firstname,e.lastname,sl.company,s.id_seller,s.id_sellerinfo 		FROM `ps_employee` e 			LEFT JOIN `ps_sellerinfo` s ON e.id_employee = s.id_seller 			LEFT JOIN `ps_product_owner` po ON po.id_owner = s.id_seller 			LEFT JOIN `ps_product` p ON p.id_product = po.id_product 			LEFT JOIN `ps_sellerinfo_lang` sl ON (sl.id_sellerinfo = s.id_sellerinfo AND sl.id_lang=1) 		WHERE e.active=1 AND e.id_profile = 5 AND p.active = 1 		ORDER BY s.date_add DESC 		LIMIT 0,15		';		$asp_sellers = Db::getInstance()->ExecuteS($sql);		for($idx=0; $idx < count($asp_sellers); $idx++)		{			$asp_sellers[$idx]['seller_logo_url'] = SellerInfo::get_seller_logo_url_static($asp_sellers[$idx]['id_sellerinfo']);		}		if (!$asp_sellers)return;		$this->context->smarty->assign(array(			'asp_sellers' => $asp_sellers,			'asp_sellers_block_style' => intval(Configuration::get('ASP_SELLERS_BLOCK_STYLE'))			));	}	private function showLocationBlock($params)	{				if(!$this->active)return;		if(!Module::isInstalled('agilemultipleseller'))return;		$this->assignLocationBlockData();		return $this->display(__FILE__, 'views/templates/hook/hookblocklocation.tpl');			}	private function assignLocationBlockData()	{		$location_level = Configuration::get('ASP_LOCATION_BLOCK_LEVEL');		$this->context->smarty->assign(array(			'seller_locations4block' => AgileMultipleShop::getLocationListNV($location_level),			'location_level' => $location_level,			'asp_location_block_style' => (int)Configuration::get('ASP_LOCATION_BLOCK_STYLE'),			'location_custom_field' => self::SHOP_BY_CUSTOM_FIELD,			'location_custom_name' => self::SHOP_BY_CUSTOM_NAME,			'agilemultipleshop_tpl' => dirname(__FILE__) . "/",			));	}		public static function getLocationListNV($location_level)	{		$context = Context::getContext();		switch($location_level)		{			default:			case 'country':				$sql = 'SELECT distinct c.id_country AS id,cl.name AS name 		            FROM `'._DB_PREFIX_.'country` c		                INNER JOIN `'._DB_PREFIX_.'sellerinfo` si ON c.id_country = si.id_country			            LEFT JOIN `'._DB_PREFIX_.'country_lang` cl ON c.id_country=cl.id_country AND cl.id_lang=' . $context->cookie->id_lang. ' 				    ORDER BY cl.name ASC	            ';				break;			case 'state':				/*$sql = 'SELECT distinct s.id_state AS id, s.name AS name 		            FROM `'._DB_PREFIX_.'state` s		                INNER JOIN `'._DB_PREFIX_.'sellerinfo` si ON s.id_state = si.id_state				    ORDER BY s.name ASC	            ';*/	            $sql = '	            	SELECT distinct s.id_state AS id, s.name AS name 		            FROM `'._DB_PREFIX_.'state` s		                INNER JOIN `'._DB_PREFIX_.'sellerinfo` si ON s.id_state = si.id_state		                INNER JOIN `'._DB_PREFIX_.'product_owner` po ON po.id_owner = si.id_seller		                INNER JOIN `'._DB_PREFIX_.'product` p ON p.id_product = po.id_product 		            WHERE p.active = 1				    ORDER BY s.name ASC	            ';				break;			case 'city':				$sql = 'SELECT distinct TRIM(sil.city) AS id, TRIM(sil.city) AS name 		            FROM `'._DB_PREFIX_.'sellerinfo_lang` sil 					WHERE sil.id_lang = ' . $context->cookie->id_lang . ' AND LENGTH(TRIM(sil.city)) > 0				    ORDER BY sil.city ASC	            ';				break;			case 'sellertype':				$sql = 'SELECT distinct id_sellertype AS id, name  				            FROM `'._DB_PREFIX_.'sellertype_lang` 							WHERE id_lang = ' . $context->cookie->id_lang . ' 						    ORDER BY name ASC					    ';				break;			case 'custom':				if(AgileMultipleShop::SHOP_BY_CUSTOM_LANG)				{					$sql = 'SELECT distinct LOWER(TRIM(sil.' . AgileMultipleShop::SHOP_BY_CUSTOM_FIELD . ')) AS id, TRIM(sil.' .  AgileMultipleShop::SHOP_BY_CUSTOM_FIELD . ') AS name 			            FROM `'._DB_PREFIX_.'sellerinfo_lang` sil 						WHERE sil.id_lang = ' . $context->cookie->id_lang . ' AND LENGTH(TRIM(sil.' . AgileMultipleShop::SHOP_BY_CUSTOM_FIELD  . ')) > 0					    ORDER BY sil.' . AgileMultipleShop::SHOP_BY_CUSTOM_FIELD  .' ASC		            ';									}				else				{					$sql = 'SELECT distinct LOWER(TRIM(si.' . AgileMultipleShop::SHOP_BY_CUSTOM_FIELD . ')) AS id, TRIM(si.' .  AgileMultipleShop::SHOP_BY_CUSTOM_FIELD . ') AS name 			            FROM `'._DB_PREFIX_.'sellerinfo` si					    ORDER BY si.' .  AgileMultipleShop::SHOP_BY_CUSTOM_FIELD  . ' ASC		            ';				}				break;					}				if(empty($sql))return array();		return Db::getInstance()->ExecuteS($sql);			}		public static function init_shop_header()	{		$main_shop = new Shop(Configuration::get('PS_SHOP_DEFAULT'));				include_once(_PS_ROOT_DIR_ . "/modules/agilemultipleseller/SellerInfo.php");				Context::getContext()->smarty->assign(array(			'is_agilemultipleshop_installed' => 1,			'header_logo_mode' => intval(Configuration::get('ASP_HEADER_LOGO_MODE')),			'base_dir_default' => $main_shop->getBaseURL(),			'seller_shop_name' => Context::getContext()->shop->name , 			'id_shop_owner' => Shop::$id_shop_owner,			'seller_logo_url'=> (isset(Shop::$sellerinfo)? SellerInfo::get_seller_logo_url_static(Shop::$sellerinfo->id) : '')		));	}			public static function clear_blockcategory_cache()	{		@session_start();		if(!isset($_SESSION['id_shop_owner']))$_SESSION['id_shop_owner'] = 0;		if($_SESSION['id_shop_owner'] != Shop::$id_shop_owner)		{			$_SESSION['id_shop_owner'] = Shop::$id_shop_owner;			Context::getContext()->smarty->clearAllCache();		}	}		public static function get_rewrite_rules()	{			return array(		'agilesellers' => array(			'controller' =>	'agilesellers',					'rule' =>	'shops-name-start-with-{filter}-by-{loclevel}-in-{parentid}-{parentname}',			'keywords' => array(				'filter' =>			array('regexp' => '[a-zA-Z]+', 'param' => 'filter'),				'loclevel' =>		array('regexp' => '[a-zA-Z]+', 'param' => 'loclevel'),				'parentid' =>		array('regexp' => '[0-9]+', 'param' => 'parentid'),				'parentname' =>		array('regexp' => '[_a-zA-Z0-9-\pL]*', 'param' => 'parentname'),				'rewrite' =>		array('regexp' => '[_a-zA-Z0-9-\pL]*'),				'meta_keywords' =>	array('regexp' => '[_a-zA-Z0-9-\pL]*'),				'meta_title' =>		array('regexp' => '[_a-zA-Z0-9-\pL]*'),			),		),				'sellerlocation' => array(			'controller' =>	'sellerlocation',			'rule' =>		'shop-by-{level}/{id}-{rewrite}',			'keywords' => array(				'level' =>			array('regexp' => '[_a-zA-Z0-9-\pL]*', 'param' => 'location_level'),				'id' =>				array('regexp' => '[_a-zA-Z0-9-\pL]*', 'param' => 'id_location'),				'rewrite' =>		array('regexp' => '[_a-zA-Z0-9-\pL]*'),				'meta_keywords' =>	array('regexp' => '[_a-zA-Z0-9-\pL]*'),				'meta_title' =>		array('regexp' => '[_a-zA-Z0-9-\pL]*'),			),		));		}		private function create_shops_for_existing_sellers()	{		$sql = 'SELECT s.id_seller, sl.company 				FROM ' . _DB_PREFIX_ . 'sellerinfo s					LEFT JOIN ' . _DB_PREFIX_ . 'sellerinfo_lang sl ON (s.id_sellerinfo=sl.id_sellerinfo AND sl.id_lang=' . intval(Configuration::get('PS_LANG_DEFAULT')) . ')				WHERE id_shop <=1';		$sellers = Db::getInstance()->ExecuteS($sql);		if(empty($sellers))return;		foreach($sellers as $seller)		{			$id_shop = $this->create_new_shop($seller["id_seller"], $seller["company"]);			$sql = "UPDATE " . _DB_PREFIX_ . "sellerinfo SET id_shop=" . $id_shop . " WHERE id_seller=" . intval($seller["id_seller"]);			Db::getInstance()->Execute($sql);		}	}			public static function create_new_shop($id_seller, $name)	{		if(empty($name))$name = "shop";		if(Shop::shop_name_duplicated($name, 0))			$name = $name . "-" . $id_seller;		$defshop = new Shop((int)Configuration::get('PS_SHOP_DEFAULT'));				$shop = new Shop();		$shop->name = $name;		$shop->id_shop_group = $defshop->id_shop_group;		$shop->id_category = $defshop->id_category;		$shop->active = 1;		$shop->deleted = 0;		$shop->id_theme = $defshop->id_theme;		$shop->add();		$sql = 'SELECT id_shop_url 	FROM '._DB_PREFIX_.'shop_url WHERE active = 1 AND main=1 AND id_shop = '.(int)Configuration::get('PS_SHOP_DEFAULT');		$id_show_url = intval(Db::getInstance()->getValue($sql));				$shopurl = new ShopUrl($id_show_url);		$shopurl->id = 0;  		$shopurl->id_shop = $shop->id; 		if((int)Configuration::get('ASP_SHOP_URL_MODE') == agilemultipleshop::SHOP_URL_MODE_DOMAIN)		{			$shopurl->domain = Tools::link_rewrite($name) . "." . str_replace("www.","",$shopurl->domain);			$shopurl->domain_ssl = Tools::link_rewrite($name) . "." . str_replace("www.","",$shopurl->domain_ssl);		}		else		{			$shopurl->virtual_uri = Tools::link_rewrite($name);		}		$id_found = $shopurl->canAddThisUrl($shopurl->domain, $shopurl->domain_ssl, $shopurl->physical_uri, $shopurl->virtual_uri);		if(intval($id_found)>0)			$shopurl->virtual_uri = $shopurl->virtual_uri . "-" . $id_seller;		$shopurl->active = 1;		$shopurl->add();				Tools::generateHtaccess();		return $shop->id;			}		public static function getShopByLocationLevel()	{		$location_level = Tools::getValue('location_level');		if(empty($location_level))$location_level = 'country';		if(!in_array($location_level,array("country","state","city","sellertype")))$location_level = 'custom';		return $location_level;	}		public static function getShopByLocationID()	{		$id_location = Tools::getValue('id_location');		$location_level = self::getShopByLocationLevel();		if(($location_level != "custom"  && $location_level != "city") || ($location_level == "custom" && AgileMultipleShop::SHOP_BY_CUSTOM_ISINT)) 		{			$id_location = (int)$id_location;		}				return $id_location;	}			public function getL($key)	{		$messages = $this->getMessages();				return $messages[$key];	}	public function getMessages()	{		$messages = array(			'Shop By Seller' => $this->l('Shop By Seller')			,'Shop By Location' => $this->l('Shop By Location')			);		return $messages;	}	}